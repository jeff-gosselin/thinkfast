{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { IS_SERVER } from '../constants'; //@todo: perhaps polling approach for older browsers as an option\n//e.g. favicon polling\n\nexport function useOnline() {\n  var _useState = useState(getOnlineStatus()),\n      online = _useState[0],\n      setOnline = _useState[1];\n\n  function getOnlineStatus() {\n    return IS_SERVER || window.navigator && window.navigator.onLine ? true : false;\n  }\n\n  useEffect(function () {\n    function handleChange() {\n      setOnline(getOnlineStatus());\n    }\n\n    window.addEventListener('offline', handleChange, false);\n    window.addEventListener('online', handleChange, false);\n    return function cleanup() {\n      window.removeEventListener('online', handleChange);\n      window.removeEventListener('offline', handleChange);\n    };\n  }, []);\n  return online;\n}","map":{"version":3,"sources":["/Users/meghangosselin/Apps/thinkfast/node_modules/react-browser-hooks/es/hooks/online.js"],"names":["useState","useEffect","IS_SERVER","useOnline","_useState","getOnlineStatus","online","setOnline","window","navigator","onLine","handleChange","addEventListener","cleanup","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;AACA;;AACA,OAAO,SAASC,SAAT,GAAqB;AAC1B,MAAIC,SAAS,GAAGJ,QAAQ,CAACK,eAAe,EAAhB,CAAxB;AAAA,MACIC,MAAM,GAAGF,SAAS,CAAC,CAAD,CADtB;AAAA,MAEIG,SAAS,GAAGH,SAAS,CAAC,CAAD,CAFzB;;AAIA,WAASC,eAAT,GAA2B;AACzB,WAAOH,SAAS,IAAIM,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACC,SAAP,CAAiBC,MAAlD,GAA2D,IAA3D,GAAkE,KAAzE;AACD;;AAEDT,EAAAA,SAAS,CAAC,YAAY;AACpB,aAASU,YAAT,GAAwB;AACtBJ,MAAAA,SAAS,CAACF,eAAe,EAAhB,CAAT;AACD;;AAEDG,IAAAA,MAAM,CAACI,gBAAP,CAAwB,SAAxB,EAAmCD,YAAnC,EAAiD,KAAjD;AACAH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC,EAAgD,KAAhD;AAEA,WAAO,SAASE,OAAT,GAAmB;AACxBL,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;AACAH,MAAAA,MAAM,CAACM,mBAAP,CAA2B,SAA3B,EAAsCH,YAAtC;AACD,KAHD;AAID,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOL,MAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { IS_SERVER } from '../constants';\n\n//@todo: perhaps polling approach for older browsers as an option\n//e.g. favicon polling\nexport function useOnline() {\n  var _useState = useState(getOnlineStatus()),\n      online = _useState[0],\n      setOnline = _useState[1];\n\n  function getOnlineStatus() {\n    return IS_SERVER || window.navigator && window.navigator.onLine ? true : false;\n  }\n\n  useEffect(function () {\n    function handleChange() {\n      setOnline(getOnlineStatus());\n    }\n\n    window.addEventListener('offline', handleChange, false);\n    window.addEventListener('online', handleChange, false);\n\n    return function cleanup() {\n      window.removeEventListener('online', handleChange);\n      window.removeEventListener('offline', handleChange);\n    };\n  }, []);\n\n  return online;\n}"]},"metadata":{},"sourceType":"module"}