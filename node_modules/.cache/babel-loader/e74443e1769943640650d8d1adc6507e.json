{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport function useGeolocation(options) {\n  var _useState = useState({\n    timestamp: Date.now(),\n    coords: {}\n  }),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(setPosition, setError, options);\n    var watchId = navigator.geolocation.watchPosition(setPosition, setError, options);\n    return function () {\n      return navigator.geolocation.clearWatch(watchId);\n    };\n  }, [options]);\n  return {\n    position: position,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/meghangosselin/Apps/thinkfast/node_modules/react-browser-hooks/es/hooks/geolocation.js"],"names":["useState","useEffect","useGeolocation","options","_useState","timestamp","Date","now","coords","position","setPosition","_useState2","error","setError","navigator","geolocation","getCurrentPosition","watchId","watchPosition","clearWatch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACtC,MAAIC,SAAS,GAAGJ,QAAQ,CAAC;AACvBK,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADY;AAEvBC,IAAAA,MAAM,EAAE;AAFe,GAAD,CAAxB;AAAA,MAIIC,QAAQ,GAAGL,SAAS,CAAC,CAAD,CAJxB;AAAA,MAKIM,WAAW,GAAGN,SAAS,CAAC,CAAD,CAL3B;;AAOA,MAAIO,UAAU,GAAGX,QAAQ,CAAC,IAAD,CAAzB;AAAA,MACIY,KAAK,GAAGD,UAAU,CAAC,CAAD,CADtB;AAAA,MAEIE,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAFzB;;AAIAV,EAAAA,SAAS,CAAC,YAAY;AACpBa,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCN,WAAzC,EAAsDG,QAAtD,EAAgEV,OAAhE;AACA,QAAIc,OAAO,GAAGH,SAAS,CAACC,WAAV,CAAsBG,aAAtB,CAAoCR,WAApC,EAAiDG,QAAjD,EAA2DV,OAA3D,CAAd;AACA,WAAO,YAAY;AACjB,aAAOW,SAAS,CAACC,WAAV,CAAsBI,UAAtB,CAAiCF,OAAjC,CAAP;AACD,KAFD;AAGD,GANQ,EAMN,CAACd,OAAD,CANM,CAAT;AAQA,SAAO;AAAEM,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBG,IAAAA,KAAK,EAAEA;AAA7B,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function useGeolocation(options) {\n  var _useState = useState({\n    timestamp: Date.now(),\n    coords: {}\n  }),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(setPosition, setError, options);\n    var watchId = navigator.geolocation.watchPosition(setPosition, setError, options);\n    return function () {\n      return navigator.geolocation.clearWatch(watchId);\n    };\n  }, [options]);\n\n  return { position: position, error: error };\n}"]},"metadata":{},"sourceType":"module"}