{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { IS_SERVER } from '../constants';\n/**\n * Function to grab the visibility prop strings\n * from the current browser\n *\n * @returns {object} - object containing both hidden\n *  and visibilityChange properties\n */\n\nvar getVisibilityProps = function getVisibilityProps() {\n  if (IS_SERVER) {\n    return {};\n  }\n\n  var hidden = void 0;\n  var visibilityChange = void 0;\n\n  if (typeof document.hidden !== 'undefined') {\n    // Opera 12.10 and Firefox 18 and later support\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if (typeof document.msHidden !== 'undefined') {\n    hidden = 'msHidden';\n    visibilityChange = 'msvisibilitychange';\n  } else if (typeof document.webkitHidden !== 'undefined') {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n\n  return {\n    hidden: hidden,\n    visibilityChange: visibilityChange\n  };\n};\n/**\n * Page Visibility API Hook\n * Hooks into page visibility API\n * @returns {boolean} - whether page is currently visible\n */\n\n\nexport var usePageVisibility = function usePageVisibility() {\n  var _getVisibilityProps = getVisibilityProps(),\n      hidden = _getVisibilityProps.hidden,\n      visibilityChange = _getVisibilityProps.visibilityChange;\n\n  var _useState = useState(IS_SERVER || !document[hidden]),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  useEffect(function () {\n    var handler = function handler() {\n      return setVisible(!document[hidden]);\n    };\n\n    document.addEventListener(visibilityChange, handler);\n    return function () {\n      document.removeEventListener(visibilityChange, handler);\n    };\n  }, [hidden, visibilityChange]);\n  return visible;\n};","map":{"version":3,"sources":["/Users/meghangosselin/Apps/thinkfast/node_modules/react-browser-hooks/es/hooks/page-visibility.js"],"names":["useEffect","useState","IS_SERVER","getVisibilityProps","hidden","visibilityChange","document","msHidden","webkitHidden","usePageVisibility","_getVisibilityProps","_useState","visible","setVisible","handler","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA;;;;;;;;AAOA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;AACrD,MAAID,SAAJ,EAAe;AACb,WAAO,EAAP;AACD;;AAED,MAAIE,MAAM,GAAG,KAAK,CAAlB;AACA,MAAIC,gBAAgB,GAAG,KAAK,CAA5B;;AAEA,MAAI,OAAOC,QAAQ,CAACF,MAAhB,KAA2B,WAA/B,EAA4C;AAC1C;AACAA,IAAAA,MAAM,GAAG,QAAT;AACAC,IAAAA,gBAAgB,GAAG,kBAAnB;AACD,GAJD,MAIO,IAAI,OAAOC,QAAQ,CAACC,QAAhB,KAA6B,WAAjC,EAA8C;AACnDH,IAAAA,MAAM,GAAG,UAAT;AACAC,IAAAA,gBAAgB,GAAG,oBAAnB;AACD,GAHM,MAGA,IAAI,OAAOC,QAAQ,CAACE,YAAhB,KAAiC,WAArC,EAAkD;AACvDJ,IAAAA,MAAM,GAAG,cAAT;AACAC,IAAAA,gBAAgB,GAAG,wBAAnB;AACD;;AAED,SAAO;AAAED,IAAAA,MAAM,EAAEA,MAAV;AAAkBC,IAAAA,gBAAgB,EAAEA;AAApC,GAAP;AACD,CArBD;AAuBA;;;;;;;AAKA,OAAO,IAAII,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AAC1D,MAAIC,mBAAmB,GAAGP,kBAAkB,EAA5C;AAAA,MACIC,MAAM,GAAGM,mBAAmB,CAACN,MADjC;AAAA,MAEIC,gBAAgB,GAAGK,mBAAmB,CAACL,gBAF3C;;AAIA,MAAIM,SAAS,GAAGV,QAAQ,CAACC,SAAS,IAAI,CAACI,QAAQ,CAACF,MAAD,CAAvB,CAAxB;AAAA,MACIQ,OAAO,GAAGD,SAAS,CAAC,CAAD,CADvB;AAAA,MAEIE,UAAU,GAAGF,SAAS,CAAC,CAAD,CAF1B;;AAIAX,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIc,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,aAAOD,UAAU,CAAC,CAACP,QAAQ,CAACF,MAAD,CAAV,CAAjB;AACD,KAFD;;AAIAE,IAAAA,QAAQ,CAACS,gBAAT,CAA0BV,gBAA1B,EAA4CS,OAA5C;AACA,WAAO,YAAY;AACjBR,MAAAA,QAAQ,CAACU,mBAAT,CAA6BX,gBAA7B,EAA+CS,OAA/C;AACD,KAFD;AAGD,GATQ,EASN,CAACV,MAAD,EAASC,gBAAT,CATM,CAAT;AAWA,SAAOO,OAAP;AACD,CArBM","sourcesContent":["import { useEffect, useState } from 'react';\nimport { IS_SERVER } from '../constants';\n\n/**\n * Function to grab the visibility prop strings\n * from the current browser\n *\n * @returns {object} - object containing both hidden\n *  and visibilityChange properties\n */\nvar getVisibilityProps = function getVisibilityProps() {\n  if (IS_SERVER) {\n    return {};\n  }\n\n  var hidden = void 0;\n  var visibilityChange = void 0;\n\n  if (typeof document.hidden !== 'undefined') {\n    // Opera 12.10 and Firefox 18 and later support\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if (typeof document.msHidden !== 'undefined') {\n    hidden = 'msHidden';\n    visibilityChange = 'msvisibilitychange';\n  } else if (typeof document.webkitHidden !== 'undefined') {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n\n  return { hidden: hidden, visibilityChange: visibilityChange };\n};\n\n/**\n * Page Visibility API Hook\n * Hooks into page visibility API\n * @returns {boolean} - whether page is currently visible\n */\nexport var usePageVisibility = function usePageVisibility() {\n  var _getVisibilityProps = getVisibilityProps(),\n      hidden = _getVisibilityProps.hidden,\n      visibilityChange = _getVisibilityProps.visibilityChange;\n\n  var _useState = useState(IS_SERVER || !document[hidden]),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  useEffect(function () {\n    var handler = function handler() {\n      return setVisible(!document[hidden]);\n    };\n\n    document.addEventListener(visibilityChange, handler);\n    return function () {\n      document.removeEventListener(visibilityChange, handler);\n    };\n  }, [hidden, visibilityChange]);\n\n  return visible;\n};"]},"metadata":{},"sourceType":"module"}